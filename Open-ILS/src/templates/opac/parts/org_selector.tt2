[%
# Org Unit Selector Widget :
#   INCLUDE build_org_selector id='selector-id' name='selector-name' 
#       value=org_id show_loc_groups=1/0 can_have_vols_only=1/0
#
# NOTE: DO NOT USE PROCESS
# Use of PROCESS results in internal variables, such as value or org_unit, to "leak" out

BLOCK build_org_selector;
    node_stack = [{org => org_unit || ctx.aou_tree}];
    IF !name; 
        name = 'loc';
        IF show_loc_groups; name = 'locg'; END;
    END;
    IF !value;
        value = ctx.search_ou;
        IF show_loc_groups; 
            value = CGI.param('locg') || ctx.search_ou;
        END;
    END;
    %]

    <select [% IF id %] id='[% id %]' [% END %] name='[% name %]'>
    [% 
        WHILE node_stack.size > 0; 
            node = node_stack.pop();
            org_unit = node.org;
            loc_grp = node.loc_grp;
            ou_id = org_unit.id;
            css_class = '';
            disabled = '';
            selected = '';

            NEXT UNLESS ctx.is_staff || org_unit.opac_visible == 't';

            IF !loc_grp; # processing an org unit

                top_loc_groups = [];
                IF show_loc_groups;
                    # add the location groups that sort below the child org units
                    FOR grp IN ctx.copy_location_groups.$ou_id.reverse;
                        IF grp.top == 't';
                            top_loc_groups.push(grp);
                        ELSE;
                            node_stack.push({org => org_unit, loc_grp => grp});
                        END;
                    END;
                END;

                # add the child org units
                FOR child IN org_unit.children.reverse;
                    node_stack.push({org => child});
                END;

                # add the location groups that sort to the top
                # above the child org units
                FOR grp IN top_loc_groups;
                    node_stack.push({org => org_unit, loc_grp => grp});
                END;
            END;

            node_value = ou_id;
            IF loc_grp; node_value = node_value _ ':' _ loc_grp.id; END;
            IF loc_grp;
                css_class = 'class="loc_grp"';
            ELSE;
                css_class = 'class="org_unit"';
            END;

            IF can_have_vols_only AND org_unit.ou_type.can_have_vols != 't';
                disabled = 'disabled="disabled"';
            ELSIF node_value == value;
                selected = 'selected="selected"';
            END %] 

            <option value='[% node_value %]' [% selected %] [% disabled %] [% css_class %]> 
            [%
                # loc_grp's are displayed as children of the current org
                depth = org_unit.ou_type.depth;
                IF loc_grp; depth = depth + 1; END;
                pad = depth * 2;
                FOR idx IN [0..pad]; '&nbsp;'; END;
                loc_grp ? loc_grp.name : org_unit.name | html ;
            %]
            </option> 
            [%
        END;
    %]
    </select>
[% END %]
